{"ast":null,"code":"var _jsxFileName = \"/home/al/DEVELOPPEMENT/MyEvent2021/frontend/src/screens/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GetGeoLocation from \"../components/GetGeoLocation\";\nimport CityList from \"../components/CityList\"; ///////////////////////////////////////////////////\n\nimport DistanceList from \"../components/DistanceList\"; ///////////////////////////////////////////////////\n\nimport MyNav from \"../components/navBar\";\nimport \"../App.css\";\nimport { Row, Col, Container, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const [events, setEvents] = useState(false);\n  const [eventsFiltred, setEventsFiltred] = useState(false);\n  const [dist, setDist] = useState(1000);\n  const [curentDate, setCurentDate] = useState(1000);\n  const gps = GetGeoLocation();\n  const [city, setCity] = useState(\"Les evenements autour de moi\");\n  const [dataTags, setDataTags] = useState(false);\n  const [paginNbr, setPaginNbr] = useState(5);\n  /* const [token, setToken] = useState(false);\n    const handleChange = ({ currentTarget }) => {\n     const { name, value } = currentTarget;\n     setMessage({ ...message, [name]: value });\n   };\n    const [isMobile, setIsMobile] = useState(false)\n  \n   //choose the screen size \n   const handleResize = () => {\n     window.innerWidth <= 768 ? setIsMobile(true) : setIsMobile(false)\n   }\n    // create an event listener\n   useEffect(() => {\n     window.addEventListener(\"resize\", handleResize)\n   })*/\n\n  useEffect(() => {\n    var yourDate = new Date();\n    const offset = yourDate.getTimezoneOffset();\n    yourDate = new Date(yourDate.getTime() - offset * 60 * 1000);\n    yourDate = yourDate.toISOString().split('T')[0];\n    console.log(yourDate);\n    setCurentDate(yourDate); // getEvent();\n\n    /* let token = (JSON.parse(window.localStorage.getItem(\"userInfo\")).token);\n     if(token){\n       setToken(token);\n       console.log(token);\n       getSeries(token)\n       setLoading(false);\n     }else{\n       // pas de user\n     }*/\n  }, []); // changer le nombre a -2 pou viser 2 div event ou more dans le futur\n\n  const trackScrolling = i => {\n    if (i == paginNbr - 1) {\n      setPaginNbr(paginNbr + 5);\n      console.log(paginNbr);\n    } else {\n      console.log(i);\n    }\n  };\n\n  const creatArrayTags = data => {\n    var tempo = \"\";\n    data.forEach(element => {\n      tempo = tempo + element.fields.tags;\n      tempo = tempo + \",\";\n    });\n    tempo = tempo.replaceAll(',,', ',');\n    tempo = tempo.replaceAll(',undefined', '');\n    tempo = tempo.replaceAll('\"', '');\n    let array = tempo.split(',');\n    array.sort();\n    array.shift();\n    const counts = {};\n    let array2 = [];\n    var sortable = [];\n    array.forEach(function (x) {\n      counts[x] = (counts[x] || 0) + 1;\n    });\n\n    for (var event in counts) {\n      sortable.push([event, counts[event]]);\n    }\n\n    sortable.sort(function (a, b) {\n      return a[1] - b[1];\n    });\n    array2 = sortable.reverse();\n    setDataTags(array2);\n  };\n\n  const getEventByCoord = async () => {\n    try {\n      const response = await axios.get(\"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=date_start>=+\" + curentDate + \"&sort=-date_start&rows=10000&facet=&geofilter.distance=\" + gps.coordinates.lat + \"%2C+\" + gps.coordinates.lng + \"%2C\" + dist);\n      creatArrayTags(response.data.records);\n      setEvents(response.data.records);\n      console.log(response.data.records);\n      setEventsFiltred(response.data.records);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const getEventByCity = async () => {\n    try {\n      const response = await axios.get(\"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=date_start>=+\" + curentDate + \"&sort=-date_start&refine.city=\" + (city.toLowerCase().charAt(0).toUpperCase() + city.slice(1)));\n      creatArrayTags(response.data.records);\n      setEvents(response.data.records);\n      setEventsFiltred(response.data.records);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const setPossition = () => {\n    if (city === \"Les evenements autour de moi\") {\n      if (gps.loaded === false) {\n        alert(\"Veuillez d'abord accepter ou refuser le partage de vos coordonées avant de continuer.\");\n      } else {\n        if (gps.error) {\n          console.log(gps.error.message);\n          alert(\"Vous avez refusé le partage de coordonées, vous pouvez malgré tout chercher les evenements par villes. Si c'est une erreur veuillez recharger la page\");\n        } else {\n          console.log(gps.coordinates.lat);\n          console.log(gps.coordinates.lng);\n          getEventByCoord();\n        }\n      }\n    } else {\n      getEventByCity();\n    }\n  };\n\n  const onchangeListCity = data => {\n    setCity(data);\n    console.log(data);\n  }; ///////////////////////////////////////////////////\n\n\n  const onchangeDistlist = data => {\n    setDist(data);\n  }; ///////////////////////////////////////////////////\n  //todo retirer event, we just need filtred events all time\n\n\n  const filtreType = e => {\n    if (e.target.value !== \"null\") {\n      const arrayTempo = [];\n      events.forEach(event => {\n        if (event.fields.tags) {\n          arrayTempo.push(event);\n        }\n      }); //   console.log(arrayTempo)\n\n      const result = arrayTempo.filter((event, i) => event.fields.tags.includes(e.target.value));\n      console.log(result);\n      setEventsFiltred(result);\n    } else {\n      setEventsFiltred(events);\n    }\n  };\n\n  const creatParty = id_event => {\n    console.log(id_event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gps.loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [dataTags && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"eventFilter\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"typeFiltre-select\",\n                children: \"Choisissez un type d'evenement : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"typeFiltre-select\",\n                onChange: filtreType,\n                className: \"inputHome2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"null\",\n                  children: \"-- Tous --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this), dataTags && dataTags.map((data, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: data[0],\n                  children: data[0] + \" : \" + data[1]\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"containerInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"villes\",\n                  children: \"Choissisez une ville : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"...ou saisissez une ville : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(CityList, {\n                  data: city,\n                  onchange: e => {\n                    onchangeListCity(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: city,\n                  placeholder: \"Entrez le nom d'une ville\",\n                  onChange: e => setCity(e.target.value),\n                  className: \"inputHome2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DistanceList, {\n                  data: dist,\n                  onchange: e => {\n                    onchangeDistlist(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-setPosition\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-info\",\n                className: \"btn-home\",\n                onClick: () => setPossition(),\n                children: \"Rechercher\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"row-spinner\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"lds-ellipsis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgEventRandom w-100\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: eventsFiltred && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: eventsFiltred.map((event, i) => i <= paginNbr - 1 && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"events-list-container w-100\",\n            onMouseOver: () => trackScrolling(i),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"events-list\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"desc\",\n                  children: event.fields.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gras\",\n                  children: \"Dates :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this), \" \", event.fields.date_start, \" ~ \", event.fields.date_end]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gras\",\n                  children: \"Localit\\xE9 :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this), \" \", event.fields.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), event.fields.image && /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: event.fields.image,\n                  alt: \"affiche de l'event\",\n                  width: \"250\",\n                  height: \"200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this) || /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: require(\"../defaultposter.png\"),\n                  alt: \"\",\n                  width: \"250\",\n                  height: \"200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.fields.free_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-info\",\n                onClick: () => creatParty(event.fields.uid),\n                children: \"Cr\\xE9er sortie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false) || /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"events-list-container w-100\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"event-list text-center imgRandomHome\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolutTitle imgConcert\",\n                children: \"CONCERTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://w.wallhaven.cc/full/01/wallhaven-01qlk1.jpg\",\n                alt: \"concerts\",\n                width: \"100%\",\n                height: \"auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolutTitle imgMusee\",\n                children: \"MUS\\xC9ES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://w.wallhaven.cc/full/13/wallhaven-13k98v.jpg\",\n                alt: \"concerts\",\n                width: \"100%\",\n                height: \"auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolutTitle imgSport\",\n                children: [\"SORTIES\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 71\n                }, this), \"SPORTIVES\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://w.wallhaven.cc/full/4l/wallhaven-4l337r.jpg\",\n                alt: \"concerts\",\n                width: \"100%\",\n                height: \"auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"MzgkKs3BdGlhOSKXgA9WfsHj3bw=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/al/DEVELOPPEMENT/MyEvent2021/frontend/src/screens/HomePage.js"],"names":["React","useState","useEffect","axios","GetGeoLocation","CityList","DistanceList","MyNav","Row","Col","Container","Button","Form","HomePage","events","setEvents","eventsFiltred","setEventsFiltred","dist","setDist","curentDate","setCurentDate","gps","city","setCity","dataTags","setDataTags","paginNbr","setPaginNbr","yourDate","Date","offset","getTimezoneOffset","getTime","toISOString","split","console","log","trackScrolling","i","creatArrayTags","data","tempo","forEach","element","fields","tags","replaceAll","array","sort","shift","counts","array2","sortable","x","event","push","a","b","reverse","getEventByCoord","response","get","coordinates","lat","lng","records","error","getEventByCity","toLowerCase","charAt","toUpperCase","slice","setPossition","loaded","alert","message","onchangeListCity","onchangeDistlist","filtreType","e","target","value","arrayTempo","result","filter","includes","creatParty","id_event","map","description","date_start","date_end","image","require","free_text","uid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GetGeoLocation from \"../components/GetGeoLocation\";\nimport CityList from \"../components/CityList\";\n///////////////////////////////////////////////////\nimport DistanceList from \"../components/DistanceList\";\n///////////////////////////////////////////////////\nimport MyNav from \"../components/navBar\";\nimport \"../App.css\";\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Form,\n} from \"react-bootstrap\";\n\n\nfunction HomePage() {\n  const [events, setEvents] = useState(false);\n  const [eventsFiltred, setEventsFiltred] = useState(false);\n  const [dist, setDist] = useState(1000);\n  const [curentDate, setCurentDate] = useState(1000);\n\n  const gps = GetGeoLocation();\n  const [city, setCity] = useState(\"Les evenements autour de moi\");\n  const [dataTags, setDataTags] = useState(false);\n  const [paginNbr, setPaginNbr] = useState(5);\n  \n /* const [token, setToken] = useState(false);\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setMessage({ ...message, [name]: value });\n  };\n\n  const [isMobile, setIsMobile] = useState(false)\n \n  //choose the screen size \n  const handleResize = () => {\n    window.innerWidth <= 768 ? setIsMobile(true) : setIsMobile(false)\n  }\n\n  // create an event listener\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  })*/\n\n  useEffect(() => {\n    var yourDate = new Date();\n\n    const offset = yourDate.getTimezoneOffset()\n    yourDate = new Date(yourDate.getTime() - (offset*60*1000))\n    yourDate = yourDate.toISOString().split('T')[0]\n    console.log(yourDate);\n    setCurentDate(yourDate);\n   // getEvent();\n   /* let token = (JSON.parse(window.localStorage.getItem(\"userInfo\")).token);\n    if(token){\n      setToken(token);\n      console.log(token);\n      getSeries(token)\n      setLoading(false);\n    }else{\n      // pas de user\n    }*/\n  }, []);\n\n  // changer le nombre a -2 pou viser 2 div event ou more dans le futur\n  const trackScrolling = (i) => {\n    if (i == paginNbr -1) {\n      setPaginNbr(paginNbr + 5)\n      console.log(paginNbr);\n    }else{\n      console.log(i);\n    }\n  };\n\n  const creatArrayTags = (data) => {\n    var tempo = \"\";\n    data.forEach((element) => {\n      tempo = tempo + element.fields.tags;\n      tempo = tempo + \",\";\n    });\n    tempo = tempo.replaceAll(',,', ',');\n    tempo = tempo.replaceAll(',undefined', '');\n    tempo = tempo.replaceAll('\"', '');\n    let array = tempo.split(',');\n    array.sort();\n    array.shift();\n\n    const counts = {};\n    let array2 = [];\n    var sortable = [];\n\n    array.forEach(function (x) { counts[x] = (counts[x] || 0) + 1; });\n    for (var event in counts) {\n        sortable.push([event, counts[event]]);\n    }\n    sortable.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    array2 = sortable.reverse();\n    setDataTags(array2);\n  }\n\n  const getEventByCoord = async () => {\n    try {\n      const response = await axios.get(\"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=date_start>=+\"+curentDate+\"&sort=-date_start&rows=10000&facet=&geofilter.distance=\"+gps.coordinates.lat+\"%2C+\"+gps.coordinates.lng+\"%2C\"+dist);\n      creatArrayTags(response.data.records);\n      setEvents(response.data.records)\n      console.log(response.data.records);\n      setEventsFiltred(response.data.records);\n    } catch (error) {\n      console.log(error.response);\n    }\n  }\n\n  const getEventByCity = async () => {\n    try {\n      const response = await axios.get(\"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=date_start>=+\"+curentDate+\"&sort=-date_start&refine.city=\"+(city.toLowerCase().charAt(0).toUpperCase() + city.slice(1)));\n \n      creatArrayTags(response.data.records);\n      setEvents(response.data.records)\n      setEventsFiltred(response.data.records);\n    } catch (error) {\n      console.log(error.response);\n    }\n  }\n\n  const setPossition = () => {\n    if (city === \"Les evenements autour de moi\") {\n      if (gps.loaded === false) {\n        alert(\"Veuillez d'abord accepter ou refuser le partage de vos coordonées avant de continuer.\")\n      }else{\n        if (gps.error) {\n          console.log(gps.error.message)\n          alert(\"Vous avez refusé le partage de coordonées, vous pouvez malgré tout chercher les evenements par villes. Si c'est une erreur veuillez recharger la page\")\n        }\n        else{\n          console.log(gps.coordinates.lat)\n          console.log(gps.coordinates.lng)\n          getEventByCoord()\n        }\n      }\n    }else{\n      getEventByCity();\n    }\n  }\n\n  const onchangeListCity = (data) => {\n    setCity(data)\n    console.log(data);\n  }\n///////////////////////////////////////////////////\n  const onchangeDistlist = (data) => {setDist(data)}\n///////////////////////////////////////////////////\n//todo retirer event, we just need filtred events all time\nconst filtreType = (e) => {\n  if (e.target.value !== \"null\") {\n      const arrayTempo = []\n      events.forEach((event) => {\n        if (event.fields.tags) {\n          arrayTempo.push(event);\n        }\n      });\n  //   console.log(arrayTempo)\n      const result = arrayTempo.filter((event, i) => \n          event.fields.tags.includes(e.target.value)\n      );\n      console.log(result);\n      setEventsFiltred(result);\n  }else{\n    setEventsFiltred(events);\n  }\n}\n\nconst creatParty = (id_event) => {\n  console.log(id_event);\n}\n\n\n\n  return (\n    <div>\n      <MyNav />\n\n      <div>\n        {gps.loaded &&\n          <>\n            {dataTags &&\n            <>\n            <Row>\n              <Col className=\"eventFilter\">\n              <label htmlFor=\"typeFiltre-select\">Choisissez un type d'evenement : </label>\n              <select name=\"typeFiltre-select\" onChange={filtreType} className='inputHome2'>\n                <option value=\"null\">-- Tous --</option>\n                  {dataTags && dataTags.map((data, i) =>\n                <option key={i} value={data[0]}>{data[0] + \" : \" + data[1]}</option>\n                  )}\n              </select>\n              </Col>\n            </Row>\n            </>\n            }\n            \n            <Row>\n              <Col>\n                <Col className='containerInput'>\n                  <div>\n                    <label htmlFor=\"villes\">Choissisez une ville : </label>\n                      <p>...ou saisissez une ville : </p>\n                  </div>\n\n                    <div>\n                      <CityList data={city} onchange={(e) => {onchangeListCity(e); }}/>\n                      <Form.Control\n                          type=\"text\"\n                          value={city}\n                          placeholder=\"Entrez le nom d'une ville\"\n                          onChange={(e) => setCity(e.target.value)}\n                          className=\"inputHome2\"\n                      />\n                    </div>\n\n                    <div>\n                      <DistanceList data={dist} onchange={(e) => {onchangeDistlist(e); }} />\n                    </div>\n                </Col>\n\n                <div className=\"btn-setPosition\">\n                  <Button variant=\"outline-info\" className=\"btn-home\" onClick={() => setPossition()}>\n                    Rechercher\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </>\n          ||\n          <>\n            <Row className=\"row-spinner\">\n              <Col className=\"text-center\">\n                <div class=\"lds-ellipsis\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                </div>\n              </Col>\n            </Row>\n\n          </>\n        }\n      </div>\n      \n      <div className=\"imgEventRandom w-100\">\n      <Container>\n            {eventsFiltred &&\n              <>\n              { eventsFiltred.map((event, i) => i <= paginNbr-1 &&\n                <Row key={i} className=\"events-list-container w-100\" onMouseOver={() => trackScrolling(i)}>\n                  <div className=\"events-list\">\n                    <Col>\n                      <h4 className=\"desc\">{event.fields.description}</h4>\n                    </Col>\n                    <Col>\n                      <span className=\"gras\">Dates :</span>{\" \"}\n                      {event.fields.date_start} ~ {event.fields.date_end}\n                    </Col>\n                    <Col>\n                      <span className=\"gras\">Localité :</span> {event.fields.city}\n                    </Col>\n                    {event.fields.image &&\n                      <Col>\n                        <img src={event.fields.image} alt=\"affiche de l'event\" width=\"250\" height=\"200\" />\n                      </Col>\n                    ||\n                      <Col>\n                        <img src={require(\"../defaultposter.png\")} alt=\"\" width=\"250\" height=\"200\" />\n                      </Col>\n                    }\n                    <p>{event.fields.free_text}</p>\n                    {/*afficher seulement si l'useur et co ou message d'erreur genre => mec tes pas co '-' */}\n                    <Button variant=\"outline-info\" onClick={() => creatParty(event.fields.uid)}>\n                      Créer sortie\n                    </Button>\n                  </div>\n                </Row>\n              )}\n              </>\n              ||\n              <>\n              <Row className=\"events-list-container w-100\">\n                  <Col className=\"event-list text-center imgRandomHome\">\n                        <div className=\"absolutTitle imgConcert\">CONCERTS</div>\n                        <img src=\"https://w.wallhaven.cc/full/01/wallhaven-01qlk1.jpg\"\n                          alt=\"concerts\" width=\"100%\" height=\"auto\"/>\n                        <div className=\"absolutTitle imgMusee\">MUSÉES</div>\n                        <img src=\"https://w.wallhaven.cc/full/13/wallhaven-13k98v.jpg\"\n                          alt=\"concerts\" width=\"100%\" height=\"auto\"/>\n\n                        <div className=\"absolutTitle imgSport\">SORTIES<br></br>SPORTIVES</div>\n                        <img src=\"https://w.wallhaven.cc/full/4l/wallhaven-4l337r.jpg\"\n                          alt=\"concerts\" width=\"100%\" height=\"auto\"/>\n                  </Col>\n              </Row>\n              </>\n            }\n      </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}