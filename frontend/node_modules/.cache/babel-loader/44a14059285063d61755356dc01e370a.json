{"ast":null,"code":"var _jsxFileName = \"/home/al/DEVELOPPEMENT/MyEvent2021/frontend/src/screens/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Container, Dropdown, Button } from \"react-bootstrap\";\nimport GetGeoLocation from \"../components/GetGeoLocation\";\nimport CityList from \"../components/CityList\";\nimport MyNav from \"../components/navBar\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const [events, setEvents] = useState(false);\n  const [eventsFiltred, setEventsFiltred] = useState([]);\n  const [filtredEventsActive, setFiltredEventsActive] = useState(false);\n  const [autoriseGps, SetAutoriseGps] = useState(false);\n  const gps = GetGeoLocation();\n  const [city, setCity] = useState(false);\n  const [dataTags, setDataTags] = useState([]);\n  /* const [token, setToken] = useState(false);\n   const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setMessage({ ...message, [name]: value });\n  };\n   const [isMobile, setIsMobile] = useState(false)\n    //choose the screen size \n  const handleResize = () => {\n    window.innerWidth <= 768 ? setIsMobile(true) : setIsMobile(false)\n  }\n   // create an event listener\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  })*/\n\n  useEffect(() => {// getEvent();\n\n    /* let token = (JSON.parse(window.localStorage.getItem(\"userInfo\")).token);\n    if(token){\n      setToken(token);\n      console.log(token);\n      getSeries(token)\n      setLoading(false);\n    }else{\n      // pas de user\n    }*/\n  }, []);\n  /* <p>Position : { gps.loaded && gps.error && gps.error.message &&\n    <p>La g√©olocalisation est imposible</p>\n    ||\n    <p>{JSON.stringify(gps.coordinates.lat)} : {JSON.stringify(gps.coordinates.lng)}</p>\n    }\n     </p>*/\n\n  const getEventByCoord = async () => {\n    try {\n      const response = await axios.get(\"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=&geofilter.distance=\" + gps.coordinates.lat + \"%2C+\" + gps.coordinates.lng + \"%2C100000\"); //   console.log(response.data);\n\n      console.log(response.data.records);\n      setEvents(response.data.records);\n      var tempo = \"\";\n      response.data.records.forEach(element => {\n        tempo = tempo + element.fields.tags;\n        tempo = tempo + \",\";\n      });\n      tempo = tempo.replaceAll(\",,\", \",\");\n      tempo = tempo.replaceAll(\",undefined\", \"\");\n      let array = tempo.split(\",\"); //Todo erase double\n\n      setDataTags(array);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const getPossition = () => {\n    console.log(gps);\n\n    if (gps.loaded == false) {\n      alert(\"veuillez d'abors accepter ou refuser le partage de vos coordoner\");\n    } else {\n      if (gps.error) {\n        console.log(gps.error.message);\n        alert(\"Vos avez refusser le partage de coordonee, vous pouvez malgre tout chercher les evenment par les filtres, si c'est une errur recharger la page\");\n      } else {\n        console.log(gps.coordinates.lat);\n        console.log(gps.coordinates.lng);\n        getEventByCoord();\n      }\n    }\n  };\n\n  const validFilter = () => {\n    console.log(city);\n  };\n\n  const onchangeListCity = data => {\n    setCity(data);\n    console.log(data);\n  };\n\n  const filtreType = e => {\n    if (e.target.value !== \"null\") {\n      const arrayTempo = [];\n      events.forEach(event => {\n        if (event.fields.tags) {\n          arrayTempo.push(event);\n        }\n      }); //   console.log(arrayTempo)\n\n      const result = arrayTempo.filter((event, i) => event.fields.tags.includes(e.target.value));\n      console.log(result);\n      setEventsFiltred(result);\n      setFiltredEventsActive(true);\n    } else {\n      setEventsFiltred(events);\n    }\n  };\n\n  const letsFiltre = data => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-AutourDeMoi\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        onClick: () => getPossition(),\n        children: \"Evenements autour de moi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"eventAvenir\",\n        children: \"Ev\\xE9nements \\xE0 venir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), gps.loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filtres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"typeFiltre-select\",\n          children: [\"Choisissez un type d'evenement :\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"typeFiltre-select\",\n          onChange: filtreType,\n          children: [gps && gps.loaded && dataTags.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data,\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 40\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"null\",\n            children: \"-- Tous --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recherches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CityList, {\n          data: city,\n          onchange: e => {\n            onchangeListCity(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => validFilter(),\n          children: \"Recherchez\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: filtredEventsActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: eventsFiltred.map(event => /*#__PURE__*/_jsxDEV(Row, {\n          className: \"events-list-container w-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"desc\",\n                children: event.fields.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gras\",\n                children: \"Dates :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), \" \", event.fields.date_start, \" ~ \", event.fields.date_end]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gras\",\n                children: \"Localit\\xE9 :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), \" \", event.fields.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), event.fields.image && /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: event.fields.image,\n                alt: \"photo de l'event\",\n                width: \"250\",\n                height: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this) || /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require(\"../defaultposter.png\"),\n                alt: \"\",\n                width: \"250\",\n                height: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.fields.free_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: events && events.map(event => /*#__PURE__*/_jsxDEV(Row, {\n          className: \"events-list-container w-100\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"desc\",\n              children: event.fields.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-info\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gras\",\n                  children: \"Dates :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this), \" \", event.fields.date_start, \" ~ \", event.fields.date_end]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gras\",\n                  children: \"Localit\\xE9 :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this), \" \", event.fields.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this), event.fields.image && /*#__PURE__*/_jsxDEV(Col, {\n              className: \"eventImg\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: event.fields.image,\n                alt: \"\",\n                width: \"250\",\n                height: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 23\n            }, this) || /*#__PURE__*/_jsxDEV(Col, {\n              className: \"eventImg\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require(\"../defaultposter.png\"),\n                alt: \"\",\n                width: \"250\",\n                height: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.fields.free_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"rp/W7rH9ZNda+PyjqN/pYsPn4CY=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/al/DEVELOPPEMENT/MyEvent2021/frontend/src/screens/HomePage.js"],"names":["React","useState","useEffect","axios","Row","Col","Container","Dropdown","Button","GetGeoLocation","CityList","MyNav","HomePage","events","setEvents","eventsFiltred","setEventsFiltred","filtredEventsActive","setFiltredEventsActive","autoriseGps","SetAutoriseGps","gps","city","setCity","dataTags","setDataTags","getEventByCoord","response","get","coordinates","lat","lng","console","log","data","records","tempo","forEach","element","fields","tags","replaceAll","array","split","error","getPossition","loaded","alert","message","validFilter","onchangeListCity","filtreType","e","target","value","arrayTempo","event","push","result","filter","i","includes","letsFiltre","map","description","date_start","date_end","image","require","free_text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Container, Dropdown, Button } from \"react-bootstrap\";\nimport GetGeoLocation from \"../components/GetGeoLocation\";\nimport CityList from \"../components/CityList\";\n\nimport MyNav from \"../components/navBar\";\nimport \"../App.css\";\n\nfunction HomePage() {\n  const [events, setEvents] = useState(false);\n  const [eventsFiltred, setEventsFiltred] = useState([]);\n  const [filtredEventsActive, setFiltredEventsActive] = useState(false);\n\n  const [autoriseGps, SetAutoriseGps] = useState(false);\n  const gps = GetGeoLocation();\n  const [city, setCity] = useState(false);\n  const [dataTags, setDataTags] = useState([]);\n\n  /* const [token, setToken] = useState(false);\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setMessage({ ...message, [name]: value });\n  };\n\n  const [isMobile, setIsMobile] = useState(false)\n \n  //choose the screen size \n  const handleResize = () => {\n    window.innerWidth <= 768 ? setIsMobile(true) : setIsMobile(false)\n  }\n\n  // create an event listener\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  })*/\n\n  useEffect(() => {\n    // getEvent();\n    /* let token = (JSON.parse(window.localStorage.getItem(\"userInfo\")).token);\n    if(token){\n      setToken(token);\n      console.log(token);\n      getSeries(token)\n      setLoading(false);\n    }else{\n      // pas de user\n    }*/\n  }, []);\n  /* <p>Position : { gps.loaded && gps.error && gps.error.message &&\n    <p>La g√©olocalisation est imposible</p>\n    ||\n    <p>{JSON.stringify(gps.coordinates.lat)} : {JSON.stringify(gps.coordinates.lng)}</p>\n    }\n\n    </p>*/\n\n  const getEventByCoord = async () => {\n    try {\n      const response = await axios.get(\n        \"https://public.opendatasoft.com/api/records/1.0/search/?dataset=evenements-publics-cibul&q=&geofilter.distance=\" +\n          gps.coordinates.lat +\n          \"%2C+\" +\n          gps.coordinates.lng +\n          \"%2C100000\"\n      );\n      //   console.log(response.data);\n      console.log(response.data.records);\n      setEvents(response.data.records);\n      var tempo = \"\";\n      response.data.records.forEach((element) => {\n        tempo = tempo + element.fields.tags;\n        tempo = tempo + \",\";\n      });\n      tempo = tempo.replaceAll(\",,\", \",\");\n      tempo = tempo.replaceAll(\",undefined\", \"\");\n      let array = tempo.split(\",\");\n      //Todo erase double\n      setDataTags(array);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const getPossition = () => {\n    console.log(gps);\n    if (gps.loaded == false) {\n      alert(\"veuillez d'abors accepter ou refuser le partage de vos coordoner\");\n    } else {\n      if (gps.error) {\n        console.log(gps.error.message);\n        alert(\n          \"Vos avez refusser le partage de coordonee, vous pouvez malgre tout chercher les evenment par les filtres, si c'est une errur recharger la page\"\n        );\n      } else {\n        console.log(gps.coordinates.lat);\n        console.log(gps.coordinates.lng);\n        getEventByCoord();\n      }\n    }\n  };\n  const validFilter = () => {\n    console.log(city);\n  };\n\n  const onchangeListCity = (data) => {\n    setCity(data);\n    console.log(data);\n  };\n\n  const filtreType = (e) => {\n    if (e.target.value !== \"null\") {\n      const arrayTempo = [];\n      events.forEach((event) => {\n        if (event.fields.tags) {\n          arrayTempo.push(event);\n        }\n      });\n      //   console.log(arrayTempo)\n      const result = arrayTempo.filter((event, i) =>\n        event.fields.tags.includes(e.target.value)\n      );\n      console.log(result);\n      setEventsFiltred(result);\n      setFiltredEventsActive(true);\n    } else {\n      setEventsFiltred(events);\n    }\n  };\n\n  const letsFiltre = (data) => {};\n  return (\n    <div>\n      <MyNav />\n      <div className=\"btn-AutourDeMoi\">\n        <Button variant=\"outline-info\" onClick={() => getPossition()}>\n          Evenements autour de moi\n        </Button>{\" \"}\n      </div>\n\n      <div>\n        <h1 className=\"eventAvenir\">Ev√©nements √† venir</h1>\n        {(gps.loaded && (\n          <>\n            <h4>Filtres</h4>\n            <label for=\"typeFiltre-select\">\n              Choisissez un type d'evenement :{\" \"}\n            </label>\n            <select name=\"typeFiltre-select\" onChange={filtreType}>\n              {gps &&\n                gps.loaded &&\n                dataTags.map((data) => <option value={data}>{data}</option>)}\n              <option value=\"null\">-- Tous --</option>\n            </select>\n          </>\n        )) || (\n          <>\n            <h2>Recherches</h2>\n            <CityList\n              data={city}\n              onchange={(e) => {\n                onchangeListCity(e);\n              }}\n            />\n            <button onClick={() => validFilter()}>Recherchez</button>\n          </>\n        )}\n      </div>\n\n      <Container>\n        {(filtredEventsActive && (\n          <>\n            {eventsFiltred.map((event) => (\n              <Row className=\"events-list-container w-100\">\n                <div className=\"events-list\">\n                  <Col>\n                    <h4 className=\"desc\">{event.fields.description}</h4>\n                  </Col>\n                  <Col>\n                    <span className=\"gras\">Dates :</span>{\" \"}\n                    {event.fields.date_start} ~ {event.fields.date_end}\n                  </Col>\n                  <Col>\n                    <span className=\"gras\">Localit√© :</span> {event.fields.city}\n                  </Col>\n                  {(event.fields.image && (\n                    <Col>\n                      <img\n                        src={event.fields.image}\n                        alt=\"photo de l'event\"\n                        width=\"250\"\n                        height=\"200\"\n                      />\n                    </Col>\n                  )) || (\n                    <Col>\n                      <img\n                        src={require(\"../defaultposter.png\")}\n                        alt=\"\"\n                        width=\"250\"\n                        height=\"200\"\n                      />\n                    </Col>\n                  )}\n                  <p>{event.fields.free_text}</p>\n                </div>\n              </Row>\n            ))}\n          </>\n        )) || (\n          <>\n            {events &&\n              events.map((event) => (\n                <Row className=\"events-list-container w-100\">\n                  <Col>\n                    <h3 className=\"desc\">{event.fields.description}</h3>\n                  </Col>\n                  <div className=\"events-list\">\n                    <div className=\"event-info\">\n                      <Col>\n                        <span className=\"gras\">Dates :</span>{\" \"}\n                        {event.fields.date_start} ~ {event.fields.date_end}\n                      </Col>\n                      <Col>\n                        <span className=\"gras\">Localit√© :</span>{\" \"}\n                        {event.fields.city}\n                      </Col>\n                    </div>\n                    {(event.fields.image && (\n                      <Col className=\"eventImg\">\n                        <img\n                          src={event.fields.image}\n                          alt=\"\"\n                          width=\"250\"\n                          height=\"200\"\n                        />\n                      </Col>\n                    )) || (\n                      <Col className=\"eventImg\">\n                        <img\n                          src={require(\"../defaultposter.png\")}\n                          alt=\"\"\n                          width=\"250\"\n                          height=\"200\"\n                        />\n                      </Col>\n                    )}\n                    <p>{event.fields.free_text}</p>\n                  </div>\n                  <hr></hr>\n                </Row>\n              ))}\n          </>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}